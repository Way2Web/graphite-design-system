/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ISelectConfig, ISelectOption } from "./types/select";
import { IFormElementData } from "./types/form";
export namespace Components {
    interface MyContainer {
        "getValue": () => Promise<{}>;
    }
    interface WayAutosuggest {
        "config"?: ISelectConfig;
        "form"?: boolean;
        "getValue": () => Promise<ISelectOption[]>;
        "name"?: string;
        "options"?: Array<ISelectOption>;
        "validation"?: (value: any) => string[];
        "value"?: Array<{ label: string; value: any }>;
    }
    interface WayButton {
        /**
          * Set to `"outline"` for a transparent button with a border, or to `"solid"`. The default style is `"solid"`.
         */
        "fill"?: 'outline' | 'solid';
        /**
          * Contains a URL or a URL fragment that the hyperlink points to.
         */
        "href": string | undefined;
        /**
          * Specifies the relationship of the target object to the link object. The value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).
         */
        "rel": string | undefined;
        /**
          * Specifies where to display the linked URL. Special keywords: `"_blank"`, `"_self"`, `"_parent"`, `"_top"`.
         */
        "target": string | undefined;
    }
    interface WayForm {
        "getValue": () => Promise<{}>;
    }
}
declare global {
    interface HTMLMyContainerElement extends Components.MyContainer, HTMLStencilElement {
    }
    var HTMLMyContainerElement: {
        prototype: HTMLMyContainerElement;
        new (): HTMLMyContainerElement;
    };
    interface HTMLWayAutosuggestElement extends Components.WayAutosuggest, HTMLStencilElement {
    }
    var HTMLWayAutosuggestElement: {
        prototype: HTMLWayAutosuggestElement;
        new (): HTMLWayAutosuggestElement;
    };
    interface HTMLWayButtonElement extends Components.WayButton, HTMLStencilElement {
    }
    var HTMLWayButtonElement: {
        prototype: HTMLWayButtonElement;
        new (): HTMLWayButtonElement;
    };
    interface HTMLWayFormElement extends Components.WayForm, HTMLStencilElement {
    }
    var HTMLWayFormElement: {
        prototype: HTMLWayFormElement;
        new (): HTMLWayFormElement;
    };
    interface HTMLElementTagNameMap {
        "my-container": HTMLMyContainerElement;
        "way-autosuggest": HTMLWayAutosuggestElement;
        "way-button": HTMLWayButtonElement;
        "way-form": HTMLWayFormElement;
    }
}
declare namespace LocalJSX {
    interface MyContainer {
    }
    interface WayAutosuggest {
        "config"?: ISelectConfig;
        "form"?: boolean;
        "name"?: string;
        "onValueChange"?: (event: CustomEvent<IFormElementData>) => void;
        "options"?: Array<ISelectOption>;
        "validation"?: (value: any) => string[];
        "value"?: Array<{ label: string; value: any }>;
    }
    interface WayButton {
        /**
          * Set to `"outline"` for a transparent button with a border, or to `"solid"`. The default style is `"solid"`.
         */
        "fill"?: 'outline' | 'solid';
        /**
          * Contains a URL or a URL fragment that the hyperlink points to.
         */
        "href"?: string | undefined;
        /**
          * Specifies the relationship of the target object to the link object. The value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).
         */
        "rel"?: string | undefined;
        /**
          * Specifies where to display the linked URL. Special keywords: `"_blank"`, `"_self"`, `"_parent"`, `"_top"`.
         */
        "target"?: string | undefined;
    }
    interface WayForm {
        "onValueChange"?: (event: CustomEvent<object>) => void;
    }
    interface IntrinsicElements {
        "my-container": MyContainer;
        "way-autosuggest": WayAutosuggest;
        "way-button": WayButton;
        "way-form": WayForm;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-container": LocalJSX.MyContainer & JSXBase.HTMLAttributes<HTMLMyContainerElement>;
            "way-autosuggest": LocalJSX.WayAutosuggest & JSXBase.HTMLAttributes<HTMLWayAutosuggestElement>;
            "way-button": LocalJSX.WayButton & JSXBase.HTMLAttributes<HTMLWayButtonElement>;
            "way-form": LocalJSX.WayForm & JSXBase.HTMLAttributes<HTMLWayFormElement>;
        }
    }
}
